#!/bin/bash
echo "Development Environment Help"
echo "==========================="
echo ""
echo "Ghostty Split Commands (use from host terminal):"
echo "  Cmd+D           - Split right"
echo "  Cmd+Shift+D     - Split down"
echo "  Cmd+W           - Close current split"
echo "  Cmd+H/J/K/L     - Navigate splits"
echo "  Cmd+Shift+H/J/K/L - Resize splits"
echo ""
echo "Container Development Commands:"
echo "  nvim [file]     - Edit with Neovim"
echo "  claude          - Start Claude Code with MCP servers"
echo "  claude --mcp-debug - Debug MCP server connections"
echo "  claude mcp list - List configured MCP servers"
echo "  python          - Python REPL"
echo "  pip install X   - Install Python package"
echo "  npm install X   - Install Node package"
echo "  black .         - Format Python code"
echo "  ruff check .    - Lint Python code"
echo "  pytest          - Run Python tests"
echo ""
echo "MCP Server Commands (within Claude Code):"
echo "  /mcp            - Check MCP server status"
echo "  /mcp list       - List available tools"
echo "  Search web      - Use Brave Search MCP"
echo "  Read files      - Use Filesystem MCP"
echo "  Fetch URLs      - Use Fetch MCP"
echo ""
echo "Zen MCP Commands (AI Orchestration):"
echo "  \"use zen chat to brainstorm X\"     - Multi-AI collaboration"
echo "  \"zen thinkdeep about Y\"            - Extended reasoning"
echo "  \"zen codereview this file\"         - Professional review"
echo "  \"zen debug this error\"             - Root cause analysis"
echo "  \"zen analyze architecture\"         - Code analysis"
echo "  \"use qwen3 to explain this\"        - Local Ollama model"
echo ""
echo "Ollama Integration:"
echo "  • External access via host.docker.internal:11434"
echo "  • Configure models in host Ollama instance"
echo "  • Available through Zen MCP custom API endpoint"
echo ""
echo "Recommended 3-pane layout:"
echo "  Left (main): Neovim editor"
echo "  Right-top: Terminal for commands"
echo "  Right-bottom: Claude Code session"
echo ""
