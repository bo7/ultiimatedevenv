# Specialized Development Environments
# Additional Docker configurations for specific use cases

version: '3.8'

services:
  # Main development environment (existing)
  dev-environment:
    extends:
      file: docker-compose.yml
      service: dev-environment

  # Data Science Environment
  data-science:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.datascience
    container_name: datascience-env
    ports:
      - "8888:8888"  # Jupyter
      - "8050:8050"  # Dash
      - "8501:8501"  # Streamlit
    volumes:
      - ./workspace:/workspace
      - ./data/jupyter:/home/devuser/.jupyter
      - ./data/datasets:/workspace/datasets
    environment:
      - JUPYTER_ENABLE_LAB=yes
    networks:
      - dev-network

  # Machine Learning Environment
  ml-environment:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.ml
    container_name: ml-env
    runtime: nvidia  # For GPU support
    ports:
      - "8889:8888"  # Jupyter
      - "6006:6006"  # TensorBoard
    volumes:
      - ./workspace:/workspace
      - ./data/ml-models:/workspace/models
      - ./data/ml-data:/workspace/data
    environment:
      - CUDA_VISIBLE_DEVICES=all
    networks:
      - dev-network

  # DevOps Environment
  devops-environment:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.devops
    container_name: devops-env
    privileged: true
    ports:
      - "9000:9000"  # Portainer
      - "3001:3000"  # Grafana
    volumes:
      - ./workspace:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/devops:/home/devuser/.config
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - dev-network

  # Frontend Development Environment
  frontend-dev:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.frontend
    container_name: frontend-env
    ports:
      - "3000:3000"  # React/Next.js
      - "4000:4000"  # Vite
      - "5173:5173"  # Vite dev server
      - "6006:6006"  # Storybook
    volumes:
      - ./workspace:/workspace
      - ./data/node_modules:/workspace/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - dev-network

  # Backend API Environment
  backend-api:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.backend
    container_name: backend-env
    ports:
      - "8000:8000"  # FastAPI
      - "8001:8001"  # Alternative API port
      - "5432:5432"  # PostgreSQL
    volumes:
      - ./workspace:/workspace
      - ./data/api-logs:/workspace/logs
    environment:
      - DATABASE_URL=postgresql://devuser:devpass@postgres:5432/devdb
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - dev-network

  # Microservices Environment
  microservices:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.microservices
    container_name: microservices-env
    ports:
      - "8080:8080"  # API Gateway
      - "9090:9090"  # Prometheus
      - "3000:3000"  # Grafana
      - "16686:16686"  # Jaeger UI
    volumes:
      - ./workspace:/workspace
      - ./data/microservices:/workspace/services
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - PROMETHEUS_URL=http://prometheus:9090
    networks:
      - dev-network

  # Security Testing Environment
  security-env:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.security
    container_name: security-env
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    ports:
      - "8008:8080"  # OWASP ZAP
      - "9001:9001"  # Sonarqube
    volumes:
      - ./workspace:/workspace
      - ./data/security-reports:/workspace/reports
    networks:
      - dev-network

  # Testing Environment
  testing-env:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.testing
    container_name: testing-env
    ports:
      - "4444:4444"  # Selenium Grid
      - "7357:7357"  # Selenium Grid
    volumes:
      - ./workspace:/workspace
      - ./data/test-results:/workspace/test-results
      - /dev/shm:/dev/shm  # For browser testing
    environment:
      - HUB_HOST=selenium-hub
    networks:
      - dev-network

  # Mobile Development Environment
  mobile-dev:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.mobile
    container_name: mobile-env
    privileged: true
    ports:
      - "19000:19000"  # Expo
      - "19001:19001"  # Expo
      - "19002:19002"  # Expo
    volumes:
      - ./workspace:/workspace
      - ./data/android-sdk:/home/devuser/android-sdk
    environment:
      - ANDROID_HOME=/home/devuser/android-sdk
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge

# Add health checks for all services
x-healthcheck: &default-healthcheck
  test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s
